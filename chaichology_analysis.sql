create database ChaichologyShop;
use ChaichologyShop;
--SQL CASE STUDY 1

-- Tea Shops Table
CREATE TABLE Tea_Shops (
    shop_id int PRIMARY KEY,
    shop_name VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    state VARCHAR(50),
    country VARCHAR(50) NOT NULL
);

INSERT INTO Tea_Shops (shop_id, shop_name, city, state, country) VALUES
(1, 'Chaichology', 'Mumbai', 'Maharashtra', 'India'),
(2, 'Chaichology', 'Delhi', 'Delhi', 'India'),
(3, 'Chaichology', 'Bangalore', 'Karnataka', 'India'),
(4, 'Chaichology', 'Chennai', 'Tamil Nadu', 'India');

-- Menu Items Table
CREATE TABLE Menu_Items (
    item_id INT  PRIMARY KEY,
    item_name VARCHAR(100) NOT NULL,
   category VARCHAR(50) CHECK (category IN ('Tea', 'Snack', 'Dessert')) NOT NULL,
    price DECIMAL(5,2) NOT NULL,
    available bit DEFAULT 1
);

INSERT INTO Menu_Items (item_id, item_name, category, price, available) VALUES
(1, 'Masala Chai', 'Tea', 30.00, 1),
(2, 'Ginger Tea', 'Tea', 35.00, 1),
(3, 'Samosa', 'Snack', 20.00, 1),
(4, 'Bun Maska', 'Snack', 25.00, 1),
(5, 'Gulab Jamun', 'Dessert', 40.00, 1),
(6, 'Kulhad Chai', 'Tea', 50.00, 1);


-- Sales Table
CREATE TABLE Sales (
    sale_id INT identity(1,1) PRIMARY KEY,
    shop_id INT,
    item_id INT,
    quantity INT NOT NULL,
    transaction_date DATE NOT NULL,
    FOREIGN KEY (shop_id) REFERENCES Tea_Shops(shop_id),
    FOREIGN KEY (item_id) REFERENCES Menu_Items(item_id)
);

INSERT INTO Sales (shop_id, item_id, quantity, transaction_date) VALUES
(1, 1, 10, '2025-03-01'),
(1, 2, 5, '2025-03-02'),
(2, 3, 12, '2025-03-02'),
(3, 4, 6, '2025-03-03'),
(4, 5, 8, '2025-03-04'),
(1, 6, 15, '2025-03-05'),
(3, 2, 7, '2025-03-05'),
(2, 4, 10, '2025-03-06'),
(4, 3, 9, '2025-03-07'),
(1, 5, 6, '2025-03-08');

-- Ratings Table
CREATE TABLE Ratings (
    rating_id INT identity(1,1) PRIMARY KEY,
    shop_id INT,
    customer_name VARCHAR(100),
    rating DECIMAL(2,1) CHECK (rating BETWEEN 1 AND 5),
    review TEXT,
    FOREIGN KEY (shop_id) REFERENCES Tea_Shops(shop_id)
);

INSERT INTO Ratings (shop_id, customer_name, rating, review) VALUES
(1, 'Amit Sharma', 4.5, 'Great chai, loved the flavors!'),
(1, 'Sneha Patel', 4.8, 'Excellent service and cozy ambiance.'),
(2, 'Rahul Verma', 4.2, 'Nice variety of tea and snacks.'),
(3, 'Priya Singh', 4.6, 'Loved the Bun Maska with chai.'),
(4, 'Kunal Das', 4.9, 'Best Masala Chai in town!'),
(4, 'Anjali Mehta', 4.3, 'Samosas were crispy and delicious.'),
(3, 'Rohan Joshi', 4.7, 'Kulhad Chai was amazing!'),
(2, 'Pooja Nair', 4.5, 'Great place to relax with friends.'),
(1, 'Aditya Kapoor', 4.1, 'Nice selection, but a bit pricey.'),
(3, 'Vikram Reddy', 4.4, 'Friendly staff and great ambiance.'),
(4, 'Sanya Malhotra', 4.5, 'Best tea experience so far.'),
(2, 'Manoj Kumar', 4.7, 'Authentic and refreshing tea options.'),
(1, 'Rajesh Iyer', 4.2, 'Quick service and good snacks.'),
(3, 'Neha Thakur', 4.6, 'Kulhad Chai had a unique taste.'),
(4, 'Arjun Mishra', 4.3, 'Samosas were a bit oily, but tasty.'),
(1, 'Divya Sharma', 4.9, 'Loved the Ginger Tea!'),
(2, 'Vishal Gupta', 4.0, 'Decent selection, could improve seating.'),
(3, 'Meera Kapoor', 4.8, 'Gulab Jamun was heavenly!'),
(4, 'Tarun Saxena', 4.6, 'Nice tea shop, good vibes.'),
(1, 'Simran Kaur', 4.7, 'Perfect for evening tea breaks.');	

select * from Tea_Shops;
select * from Menu_Items;
select * from Sales;
select * from Ratings;
-- Questions
-- Q1 Lists all tea shop details ?
select *from Tea_Shops;

-- Q2 Find Menu Items Available in the Shop ?
select distinct item_name from Menu_Items;

-- Q3 Find the Total Number of Orders for Each Menu Item ?
select item_name,sum(s.quantity) as total_orders from Menu_Items as m
join Sales as s 
on m.item_id=s.item_id
group by item_name
order by total_orders desc;

-- Q4 Find the Total Revenue Generated by Each Shop in different Locations ?
select ts.shop_name,city,sum(price*quantity) as Revenue from Tea_Shops as ts
join Sales as s 
on ts.shop_id=s.shop_id
join Menu_Items as mi 
on s.item_id=mi.item_id
group by ts.shop_name, city
order by Revenue desc;

-- Q5 Find the Best-Selling Item ?
select top 1 item_name from (
select item_name,sum(s.quantity) as total_orders from Menu_Items as m
join Sales as s 
on m.item_id=s.item_id
group by item_name) a 
order by total_orders desc;

-- Q6  Count the Total Number of Ratings for Each city ?
select city,count(rating) as total_rating from Tea_Shops as s
join Ratings as r
on s.shop_id=r.shop_id
group by city
order by total_rating desc;

-- Q7 List All Shops with an Average Rating Above 4.5 ?
select s.shop_id,s.shop_name,city,avg(rating) as total_rating from Tea_Shops as s
join Ratings as r
on s.shop_id=r.shop_id
group by s.shop_id,s.shop_name,city
having avg(rating)>4.5

-- Q8  Find reviews where customers used the word "amazing" for a shop in Bangalore ?
select customer_name,review from Tea_Shops as s
join Ratings as r
on s.shop_id=r.shop_id
where review like '%amazing%' and city='Bangalore'



-- Q9 Find the names of customers who had Masala Chai and identify the tea shop where they consumed it ?
select customer_name,city from Tea_Shops as s 
join Ratings as r 
on s.shop_id=r.shop_id
join sales as ss 
on r.shop_id=ss.shop_id
join Menu_Items as mi 
on mi.item_id=ss.item_id
where item_name='Masala Chai';



-- Q10 Find the day with the most sales ?

select top 1 DATENAME(WEEKDAY,transaction_date) as day
,sum(price*quantity) as Total_sales from Menu_Items as mi 
join sales  as  s
on mi.item_id=s.item_id
group by DATENAME(WEEKDAY,transaction_date) 
order by Total_sales desc;